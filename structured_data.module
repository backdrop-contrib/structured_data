<?php
/**
 * @file
 * Annotate your content to generate Rich Search Snippets.
 */

/**
 * Implements hook_permission().
 */
function structured_data_permission() {
  return array(
    'configure structured data' =>  array(
      'title' => t('Configure structured data'),
      'description' => t('Determine which elements should be included in Rich Snippits.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function structured_data_menu() {
  $items['admin/config/structured-data'] = array(
    'title' => 'Structured data',
    'description' => 'The main configuration page for Structured Data',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('structured_data_settings_form'),
    'access arguments' => array('configure structured data'),
    'file' => 'structured_data.admin.inc',
  );

  return $items;
}

/**
 * Implements template_preprocess_html().
 *
 * Add the necesarry json-ld to the page header.
 */
function structured_data_preprocess_html(&$vars) {
  $structured_data = array();

  // Add site name to all pages.
  $name_data = structured_data_add_site_name_script();
  $structured_data = array_merge($structured_data, $name_data);

  // Add site logo to all pages.
  $logo_data = structured_data_add_site_logo_script();
  $structured_data = array_merge($structured_data, $logo_data);

  // If there is sructured data, add it to the page.
  if (!empty($structured_data)) {
    $json_ld_script = array(
      '#tag' => 'script',
      '#attributes' => array('type' => 'application/ld+json'),
      '#value' => defined('JSON_UNESCAPED_SLASHES') ? json_encode($structured_data, JSON_UNESCAPED_SLASHES) : json_encode($structured_data),
    );

    drupal_add_html_head($json_ld_script, 'structured_data_json_ld');
  }
}

/**
 * Helper function: Gets the site name data.
 */
function structured_data_add_site_name_script() {
  $setting = structured_data_get_setting('site_name');
  $data =  array();
  if (isset($setting['site_name'])) {
    $data['name'] = $setting['site_name'];
  }
  if (isset($setting['alternative_site_name'])) {
    $data['alternateName'] = $setting['alternative_site_name'];
  }
  if (isset($data['canonical_url'])) {
    $data['url'] = $setting['canonical_url'];
  }

  return $data;
}

/**
 * Helper function: Gets the site logo data.
 */
function structured_data_add_site_logo_script() {
  $setting = structured_data_get_setting('site_logo');
  $data =  array();
  if (isset($setting['site_logo'])) {
    $data['logo'] = $setting['site_logo'];
  }

  return $data;
}

/**
 * Helper function: Retrieves a setting for the structured data given.
 *
 * @param $setting_name
 *   The name of the setting to be retrieved.
 *
 * @return
 *   The value of the requested setting, NULL if the setting does not exist.
 */
function structured_data_get_setting($setting_name) {
  switch ($setting_name) {
    case 'site_name':

      // If metatag has set a cononical URL, use it here.
      $head_elements = drupal_add_html_head();
      if (!empty($head_elements['metatag_canonical'])) {
        $canonical_url = $head_elements['metatag_canonical']['#value'];
      }

      // Get the site name.
      if (variable_get('structured_data_site_name_default', FALSE)) {
        $site_name = variable_get('site_name','');
      }
      else {
        $site_name = variable_get('structured_data_site_name_custom','');
      }

      // Get the alternative site name.
      $alternative_site_name = variable_get('structured_data_site_name_alternative', '');
      if (empty($alternative_site_name)) {
        $alternative_site_name = $site_name;
      }

      return array(
        'site_name' => $site_name,
        'alternative_site_name' => $alternative_site_name,
        'canonical_url' => $canonical_url,
      );
      break;

    case 'site_logo':

      if (variable_get('structured_data_site_logo_default', TRUE)) {
        $site_logo = theme_get_setting('logo');
      }
      else {
        $logo = file_load(variable_get('structured_data_site_logo_custom'));
        $site_logo = file_create_url($logo->uri);
      }

      return array(
        'site_logo' => $site_logo,
      );
      break;
  }
}
